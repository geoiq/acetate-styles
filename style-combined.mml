<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE Map[
    <!ENTITY epsg4326 "+proj=longlat +datum=WGS84">
    <!ENTITY epsg900913 "+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs +over">
    <!ENTITY epsg900913_extent "-20037508,-20037508,20037508,20037508">

    <!ENTITY nev_host "localhost">
    <!ENTITY nev_name "naturalearth1.1_merc">
    <!ENTITY nev_user "nev">

    <!ENTITY osm_host "localhost">
    <!ENTITY osm_port "5432">
    <!ENTITY osm_name "planet_osm">
    <!ENTITY osm_user "osm">
    <!ENTITY osm_pass "">
]>
<Map srs="&epsg900913;">
    
    <Stylesheet src="world-naturalearth-lowzooms.mss"/>
    <Stylesheet src="world-osm-midzooms.mss"/>

    <Layer class="shore" id="land-shapes-110m" srs="&epsg900913;">
        <Datasource>
            <Parameter name="type">postgis</Parameter>
            <Parameter name="host">&nev_host;</Parameter>
            <Parameter name="dbname">&nev_name;</Parameter>
            <Parameter name="user">&nev_user;</Parameter>      
            <Parameter name="password"></Parameter>
            <Parameter name="table">land_110m</Parameter>
            <Parameter name="estimate_extent">false</Parameter>
            <Parameter name="extent">&epsg900913_extent;</Parameter>
        </Datasource>
    </Layer>
    <Layer class="shore" id="country-shapes-110m" srs="&epsg900913;">
        <Datasource>
            <Parameter name="type">postgis</Parameter>
            <Parameter name="host">&nev_host;</Parameter>
            <Parameter name="dbname">&nev_name;</Parameter>
            <Parameter name="user">&nev_user;</Parameter>      
            <Parameter name="password"></Parameter>
            <Parameter name="table">admin_0_countries_110m</Parameter>
            <Parameter name="estimate_extent">false</Parameter>
            <Parameter name="extent">&epsg900913_extent;</Parameter>
        </Datasource>
    </Layer>
    <Layer class="shore" id="country-shapes-50m" srs="&epsg900913;">
        <Datasource>
            <Parameter name="type">postgis</Parameter>
            <Parameter name="host">&nev_host;</Parameter>
            <Parameter name="dbname">&nev_name;</Parameter>
            <Parameter name="user">&nev_user;</Parameter>      
            <Parameter name="password"></Parameter>
            <Parameter name="table">admin_0_countries_50m</Parameter>
            <Parameter name="estimate_extent">false</Parameter>
            <Parameter name="extent">&epsg900913_extent;</Parameter>
        </Datasource>
    </Layer>
    <Layer class="shore" id="country-shapes-10m" srs="&epsg900913;">
        <Datasource>
            <Parameter name="type">postgis</Parameter>
            <Parameter name="host">&nev_host;</Parameter>
            <Parameter name="dbname">&nev_name;</Parameter>
            <Parameter name="user">&nev_user;</Parameter>      
            <Parameter name="password"></Parameter>
            <Parameter name="table">admin_0_countries_10m</Parameter>
            <Parameter name="estimate_extent">false</Parameter>
            <Parameter name="extent">&epsg900913_extent;</Parameter>
        </Datasource>
    </Layer>
    <Layer class="shore" id="processed-coast-outline" srs="&epsg900913;">
        <Datasource>
            <Parameter name="type">postgis</Parameter>
            <Parameter name="host">&osm_host;</Parameter>
            <Parameter name="dbname">&osm_name;</Parameter>
            <Parameter name="user">&osm_user;</Parameter>      
            <Parameter name="password"></Parameter>
            <Parameter name="table">coastline</Parameter>
            <Parameter name="estimate_extent">false</Parameter>
            <Parameter name="extent">&epsg900913_extent;</Parameter>
        </Datasource>
    </Layer>
    <Layer class="shore" id="processed-coast-inline" srs="&epsg900913;">
        <Datasource>
            <Parameter name="type">postgis</Parameter>
            <Parameter name="host">&osm_host;</Parameter>
            <Parameter name="dbname">&osm_name;</Parameter>
            <Parameter name="user">&osm_user;</Parameter>      
            <Parameter name="password"></Parameter>
            <Parameter name="table">coastline</Parameter>
            <Parameter name="estimate_extent">false</Parameter>
            <Parameter name="extent">&epsg900913_extent;</Parameter>
        </Datasource>
    </Layer>

    <Layer status="off" id="admin1-lines-110m" srs="&epsg900913;">
        <Datasource>
            <Parameter name="type">postgis</Parameter>
            <Parameter name="host">&nev_host;</Parameter>
            <Parameter name="dbname">&nev_name;</Parameter>
            <Parameter name="user">&nev_user;</Parameter>      
            <Parameter name="password"></Parameter>
            <Parameter name="table">admin_1_states_provinces_lines_110m</Parameter>
            <Parameter name="estimate_extent">false</Parameter>
            <Parameter name="extent">&epsg900913_extent;</Parameter>
        </Datasource>
    </Layer>
    <Layer id="admin1-lines-50m" srs="&epsg900913;">
        <Datasource>
            <Parameter name="type">postgis</Parameter>
            <Parameter name="host">&nev_host;</Parameter>
            <Parameter name="dbname">&nev_name;</Parameter>
            <Parameter name="user">&nev_user;</Parameter>      
            <Parameter name="password"></Parameter>
            <Parameter name="table">admin_1_states_provinces_lines_50m</Parameter>
            <Parameter name="estimate_extent">false</Parameter>
            <Parameter name="extent">&epsg900913_extent;</Parameter>
        </Datasource>
    </Layer>
    <Layer id="admin1-lines-10m" srs="&epsg900913;">
        <Datasource>
            <Parameter name="type">postgis</Parameter>
            <Parameter name="host">&nev_host;</Parameter>
            <Parameter name="dbname">&nev_name;</Parameter>
            <Parameter name="user">&nev_user;</Parameter>      
            <Parameter name="password"></Parameter>
            <Parameter name="table">admin_1_states_provinces_lines_10m</Parameter>
            <Parameter name="estimate_extent">false</Parameter>
            <Parameter name="extent">&epsg900913_extent;</Parameter>
        </Datasource>
    </Layer>

    <Layer class="shore" id="lakes-110m" srs="&epsg900913;">
        <Datasource>
            <Parameter name="type">postgis</Parameter>
            <Parameter name="host">&nev_host;</Parameter>
            <Parameter name="dbname">&nev_name;</Parameter>
            <Parameter name="user">&nev_user;</Parameter>      
            <Parameter name="password"></Parameter>
            <Parameter name="table">lakes_110m</Parameter>
            <Parameter name="estimate_extent">false</Parameter>
            <Parameter name="extent">&epsg900913_extent;</Parameter>
        </Datasource>
    </Layer>
    <Layer class="shore" id="lakes-50m" srs="&epsg900913;">
        <Datasource>
            <Parameter name="type">postgis</Parameter>
            <Parameter name="host">&nev_host;</Parameter>
            <Parameter name="dbname">&nev_name;</Parameter>
            <Parameter name="user">&nev_user;</Parameter>      
            <Parameter name="password"></Parameter>
            <Parameter name="table">lakes_50m</Parameter>
            <Parameter name="estimate_extent">false</Parameter>
            <Parameter name="extent">&epsg900913_extent;</Parameter>
        </Datasource>
    </Layer>
    <Layer class="shore" id="lakes-10m" srs="&epsg900913;">
        <Datasource>
            <Parameter name="type">postgis</Parameter>
            <Parameter name="host">&nev_host;</Parameter>
            <Parameter name="dbname">&nev_name;</Parameter>
            <Parameter name="user">&nev_user;</Parameter>      
            <Parameter name="password"></Parameter>
            <Parameter name="table">lakes_10m</Parameter>
            <Parameter name="estimate_extent">false</Parameter>
            <Parameter name="extent">&epsg900913_extent;</Parameter>
        </Datasource>
    </Layer>

    <Layer id="motorways-z6" srs="&epsg900913;">
        <Datasource>
            <Parameter name="type">postgis</Parameter>
            <Parameter name="host">&osm_host;</Parameter>
            <Parameter name="dbname">&osm_name;</Parameter>
            <Parameter name="user">&osm_user;</Parameter>      
            <Parameter name="password"></Parameter>
            <Parameter name="geometry_field">way_zoom6</Parameter>
            <Parameter name="table">planet_osm_motorways</Parameter>
            <Parameter name="estimate_extent">false</Parameter>
            <Parameter name="extent">&epsg900913_extent;</Parameter>
        </Datasource>
    </Layer>
    <Layer id="motorways-z7" srs="&epsg900913;">
        <Datasource>
            <Parameter name="type">postgis</Parameter>
            <Parameter name="host">&osm_host;</Parameter>
            <Parameter name="dbname">&osm_name;</Parameter>
            <Parameter name="user">&osm_user;</Parameter>      
            <Parameter name="password"></Parameter>
            <Parameter name="geometry_field">way_zoom7</Parameter>
            <Parameter name="table">planet_osm_motorways</Parameter>
            <Parameter name="estimate_extent">false</Parameter>
            <Parameter name="extent">&epsg900913_extent;</Parameter>
        </Datasource>
    </Layer>
    <Layer id="motorways-z8" srs="&epsg900913;">
        <Datasource>
            <Parameter name="type">postgis</Parameter>
            <Parameter name="host">&osm_host;</Parameter>
            <Parameter name="dbname">&osm_name;</Parameter>
            <Parameter name="user">&osm_user;</Parameter>      
            <Parameter name="password"></Parameter>
            <Parameter name="geometry_field">way_zoom8</Parameter>
            <Parameter name="table">planet_osm_motorways</Parameter>
            <Parameter name="estimate_extent">false</Parameter>
            <Parameter name="extent">&epsg900913_extent;</Parameter>
        </Datasource>
    </Layer>
    <Layer id="motorways-z9" srs="&epsg900913;">
        <Datasource>
            <Parameter name="type">postgis</Parameter>
            <Parameter name="host">&osm_host;</Parameter>
            <Parameter name="dbname">&osm_name;</Parameter>
            <Parameter name="user">&osm_user;</Parameter>      
            <Parameter name="password"></Parameter>
            <Parameter name="geometry_field">way_zoom9</Parameter>
            <Parameter name="table">planet_osm_motorways</Parameter>
            <Parameter name="estimate_extent">false</Parameter>
            <Parameter name="extent">&epsg900913_extent;</Parameter>
        </Datasource>
    </Layer>

    <Layer id="place-points-z3" class="place-points" srs="&epsg4326;">
        <Datasource>
            <Parameter name="type">shape</Parameter>
            <Parameter name="file">shp/place-points-z3</Parameter>
        </Datasource>
    </Layer>
    <Layer id="place-labels-z3" class="place-labels" srs="&epsg4326;">
        <Datasource>
            <Parameter name="type">shape</Parameter>
            <Parameter name="file">shp/place-labels-z3</Parameter>
        </Datasource>
    </Layer>
    <Layer id="place-points-z4" class="place-points" srs="&epsg4326;">
        <Datasource>
            <Parameter name="type">shape</Parameter>
            <Parameter name="file">shp/place-points-z4</Parameter>
        </Datasource>
    </Layer>
    <Layer id="place-labels-z4" class="place-labels" srs="&epsg4326;">
        <Datasource>
            <Parameter name="type">shape</Parameter>
            <Parameter name="file">shp/place-labels-z4</Parameter>
        </Datasource>
    </Layer>
    <Layer id="place-points-z5" class="place-points" srs="&epsg4326;">
        <Datasource>
            <Parameter name="type">shape</Parameter>
            <Parameter name="file">shp/place-points-z5</Parameter>
        </Datasource>
    </Layer>
    <Layer id="place-labels-z5" class="place-labels" srs="&epsg4326;">
        <Datasource>
            <Parameter name="type">shape</Parameter>
            <Parameter name="file">shp/place-labels-z5</Parameter>
        </Datasource>
    </Layer>
    <Layer id="place-points-z6" class="place-points" srs="&epsg4326;">
        <Datasource>
            <Parameter name="type">shape</Parameter>
            <Parameter name="file">shp/place-points-z6</Parameter>
        </Datasource>
    </Layer>
    <Layer id="place-labels-z6" class="place-labels" srs="&epsg4326;">
        <Datasource>
            <Parameter name="type">shape</Parameter>
            <Parameter name="file">shp/place-labels-z6</Parameter>
        </Datasource>
    </Layer>
    <Layer id="place-points-z7" class="place-points" srs="&epsg4326;">
        <Datasource>
            <Parameter name="type">shape</Parameter>
            <Parameter name="file">shp/place-points-z7</Parameter>
        </Datasource>
    </Layer>
    <Layer id="place-labels-z7" class="place-labels" srs="&epsg4326;">
        <Datasource>
            <Parameter name="type">shape</Parameter>
            <Parameter name="file">shp/place-labels-z7</Parameter>
        </Datasource>
    </Layer>
    <Layer id="place-points-z8" class="place-points" srs="&epsg4326;">
        <Datasource>
            <Parameter name="type">shape</Parameter>
            <Parameter name="file">shp/place-points-z8</Parameter>
        </Datasource>
    </Layer>
    <Layer id="place-labels-z8" class="place-labels" srs="&epsg4326;">
        <Datasource>
            <Parameter name="type">shape</Parameter>
            <Parameter name="file">shp/place-labels-z8</Parameter>
        </Datasource>
    </Layer>

    <Layer id="admin1-labels-50m" srs="&epsg900913;">
        <Datasource>
            <Parameter name="type">postgis</Parameter>
            <Parameter name="host">&nev_host;</Parameter>
            <Parameter name="dbname">&nev_name;</Parameter>
            <Parameter name="user">&nev_user;</Parameter>      
            <Parameter name="password"></Parameter>
            <Parameter name="table">(SELECT *, SUBSTRING(hasc FROM 4) AS abbr FROM admin_1_states_provinces_50m) AS admin_1_states_provinces</Parameter>
            <Parameter name="estimate_extent">false</Parameter>
            <Parameter name="extent">&epsg900913_extent;</Parameter>
        </Datasource>
    </Layer>
    <Layer id="admin1-labels-10m" srs="&epsg900913;">
        <Datasource>
            <Parameter name="type">postgis</Parameter>
            <Parameter name="host">&nev_host;</Parameter>
            <Parameter name="dbname">&nev_name;</Parameter>
            <Parameter name="user">&nev_user;</Parameter>      
            <Parameter name="password"></Parameter>
            <Parameter name="table">admin_1_states_provinces_10m</Parameter>
            <Parameter name="estimate_extent">false</Parameter>
            <Parameter name="extent">&epsg900913_extent;</Parameter>
        </Datasource>
    </Layer>

    <Layer id="marine-labels-110m" srs="&epsg900913;">
        <Datasource>
            <Parameter name="type">postgis</Parameter>
            <Parameter name="host">&nev_host;</Parameter>
            <Parameter name="dbname">&nev_name;</Parameter>
            <Parameter name="user">&nev_user;</Parameter>      
            <Parameter name="password"></Parameter>
            <Parameter name="table">(SELECT * FROM geography_marine_polys_110m ORDER BY ScaleRank ASC) AS marine_polys</Parameter>
            <Parameter name="estimate_extent">false</Parameter>
            <Parameter name="extent">&epsg900913_extent;</Parameter>
        </Datasource>
    </Layer>
    <Layer id="marine-labels-50m" srs="&epsg900913;">
        <Datasource>
            <Parameter name="type">postgis</Parameter>
            <Parameter name="host">&nev_host;</Parameter>
            <Parameter name="dbname">&nev_name;</Parameter>
            <Parameter name="user">&nev_user;</Parameter>      
            <Parameter name="password"></Parameter>
            <Parameter name="table">(SELECT * FROM geography_marine_polys_50m ORDER BY ScaleRank ASC) AS marine_polys</Parameter>
            <Parameter name="estimate_extent">false</Parameter>
            <Parameter name="extent">&epsg900913_extent;</Parameter>
        </Datasource>
    </Layer>
    <Layer id="marine-labels-10m" srs="&epsg900913;">
        <Datasource>
            <Parameter name="type">postgis</Parameter>
            <Parameter name="host">&nev_host;</Parameter>
            <Parameter name="dbname">&nev_name;</Parameter>
            <Parameter name="user">&nev_user;</Parameter>      
            <Parameter name="password"></Parameter>
            <Parameter name="table">(SELECT * FROM geography_marine_polys_10m ORDER BY ScaleRank ASC) AS marine_polys</Parameter>
            <Parameter name="estimate_extent">false</Parameter>
            <Parameter name="extent">&epsg900913_extent;</Parameter>
        </Datasource>
    </Layer>

    <Layer id="continent-labels" srs="&epsg4326;">
        <Datasource>
            <Parameter name="type">shape</Parameter>
            <Parameter name="file">shp/continents</Parameter>
        </Datasource>
    </Layer>
    


    <!--================== Above this line: global scale ====================-->

    <!--================== Below this line: city-scale ======================-->



    <Stylesheet src="city-area-colors.mss"/>
    <Stylesheet src="city-line-colors.mss"/>
    <Stylesheet src="city-line-widths.mss"/>
    <Stylesheet src="city-road-labels.mss"/>
    <Stylesheet src="city-place-labels.mss"/>

    <Layer id="processed-coast-background" srs="&epsg900913;">
        <Datasource>
            <Parameter name="type">postgis</Parameter>
            <Parameter name="host">&osm_host;</Parameter>
            <Parameter name="dbname">&osm_name;</Parameter>
            <Parameter name="user">&osm_user;</Parameter>      
            <Parameter name="password"></Parameter>
            <Parameter name="table">coastline</Parameter>
            <Parameter name="estimate_extent">false</Parameter>
            <Parameter name="extent">&epsg900913_extent;</Parameter>
        </Datasource>
    </Layer>
    <Layer id="null-island-background" srs="&epsg900913;">
        <Datasource>
            <Parameter name="type">shape</Parameter>
            <Parameter name="file">shp/null</Parameter>
        </Datasource>
    </Layer>

    <Layer id="civic-areas" srs="&epsg900913;">
        <Datasource>
            <Parameter name="type">postgis</Parameter>
            <Parameter name="host">&osm_host;</Parameter>
            <Parameter name="port">&osm_port;</Parameter>
            <Parameter name="user">&osm_user;</Parameter>
            <Parameter name="password">&osm_pass;</Parameter>
            <Parameter name="dbname">&osm_name;</Parameter>
            <Parameter name="extent">&epsg900913_extent;</Parameter>

            <Parameter name="table"><![CDATA[
                (SELECT way,
                        name
                 FROM planet_osm_polygon
                 WHERE amenity IN ('school', 'college', 'university', 'bus_station',
                                   'ferry_terminal', 'hospital', 'kindergarten',
                                   'place_of_worship', 'public_building', 'townhall')
                 ORDER BY z_order ASC, way_area DESC
                
                ) AS civic]]></Parameter>
        </Datasource>
    </Layer>
    <Layer id="green-areas" srs="&epsg900913;">
        <Datasource>
            <Parameter name="type">postgis</Parameter>
            <Parameter name="host">&osm_host;</Parameter>
            <Parameter name="port">&osm_port;</Parameter>
            <Parameter name="user">&osm_user;</Parameter>
            <Parameter name="password">&osm_pass;</Parameter>
            <Parameter name="dbname">&osm_name;</Parameter>
            <Parameter name="estimate_extent">false</Parameter>
            <Parameter name="extent">&epsg900913_extent;</Parameter>

            <Parameter name="table"><![CDATA[
                (SELECT way,
                        name,
                        (CASE WHEN leisure IN ('park', 'water_park', 'marina',
                                               'nature_reserve', 'playground',
                                               'garden', 'common') THEN 'park'
                              WHEN amenity IN ('graveyard') THEN 'cemetery'
                              WHEN landuse IN ('cemetery') THEN 'cemetery'
                              WHEN leisure IN ('sports_centre', 'golf_course',
                                               'stadium', 'track', 'pitch') THEN 'sport'
                              WHEN landuse IN ('recreation_ground') THEN 'sport'
                              WHEN landuse IN ('forest', 'wood') THEN 'forest'
                         ELSE '' END) AS kind
                 FROM planet_osm_polygon
                 WHERE leisure IN ('park', 'water_park', 'marina', 'nature_reserve',
                                   'playground', 'garden', 'common')
                    OR amenity IN ('graveyard')
                    OR landuse IN ('cemetery')
                    OR leisure IN ('sports_centre', 'golf_course', 'stadium',
                                   'track', 'pitch')
                    OR landuse IN ('recreation_ground')
                    OR landuse IN ('forest', 'wood')
                 ORDER BY z_order ASC, way_area DESC
                
                ) AS greens]]></Parameter>
        </Datasource>
    </Layer>
    <Layer id="parking-areas" srs="&epsg900913;">
        <Datasource>
            <Parameter name="type">postgis</Parameter>
            <Parameter name="host">&osm_host;</Parameter>
            <Parameter name="port">&osm_port;</Parameter>
            <Parameter name="user">&osm_user;</Parameter>
            <Parameter name="password">&osm_pass;</Parameter>
            <Parameter name="dbname">&osm_name;</Parameter>
            <Parameter name="extent">&epsg900913_extent;</Parameter>

            <Parameter name="table"><![CDATA[
                (SELECT way,
                        name
                 FROM planet_osm_polygon
                 WHERE amenity IN ('parking')
                 ORDER BY z_order ASC, way_area DESC
                
                ) AS parking]]></Parameter>
        </Datasource>
    </Layer>
    <Layer id="water-bodies" srs="&epsg900913;">
        <Datasource>
            <Parameter name="type">postgis</Parameter>
            <Parameter name="host">&osm_host;</Parameter>
            <Parameter name="port">&osm_port;</Parameter>
            <Parameter name="user">&osm_user;</Parameter>
            <Parameter name="password">&osm_pass;</Parameter>
            <Parameter name="dbname">&osm_name;</Parameter>
            <Parameter name="estimate_extent">false</Parameter>
            <Parameter name="extent">&epsg900913_extent;</Parameter>

            <Parameter name="table"><![CDATA[
                (SELECT way,
                        name
                 FROM planet_osm_polygon
                 WHERE "natural" IN ('water', 'bay')
                    OR waterway IN ('riverbank')
                 ORDER BY z_order ASC, way_area DESC
                
                ) AS water]]></Parameter>
        </Datasource>
    </Layer>
    <Layer id="building-areas" srs="&epsg900913;">
        <Datasource>
            <Parameter name="type">postgis</Parameter>
            <Parameter name="host">&osm_host;</Parameter>
            <Parameter name="port">&osm_port;</Parameter>
            <Parameter name="user">&osm_user;</Parameter>
            <Parameter name="password">&osm_pass;</Parameter>
            <Parameter name="dbname">&osm_name;</Parameter>
            <Parameter name="estimate_extent">false</Parameter>
            <Parameter name="extent">&epsg900913_extent;</Parameter>

            <Parameter name="table"><![CDATA[
                (SELECT way,
                        name
                 FROM planet_osm_polygon
                 WHERE building IS NOT NULL
                 ORDER BY z_order ASC, way_area DESC
                
                ) AS building]]></Parameter>
        </Datasource>
    </Layer>
    
    <Layer id="processed-coast-shoreline" srs="&epsg900913;">
        <Datasource>
            <Parameter name="type">postgis</Parameter>
            <Parameter name="host">&osm_host;</Parameter>
            <Parameter name="dbname">&osm_name;</Parameter>
            <Parameter name="user">&osm_user;</Parameter>      
            <Parameter name="password"></Parameter>
            <Parameter name="table">coastline</Parameter>
            <Parameter name="estimate_extent">false</Parameter>
            <Parameter name="extent">&epsg900913_extent;</Parameter>
        </Datasource>
    </Layer>
    <Layer id="water-body-shorelines" srs="&epsg900913;">
        <Datasource>
            <Parameter name="type">postgis</Parameter>
            <Parameter name="host">&osm_host;</Parameter>
            <Parameter name="port">&osm_port;</Parameter>
            <Parameter name="user">&osm_user;</Parameter>
            <Parameter name="password">&osm_pass;</Parameter>
            <Parameter name="dbname">&osm_name;</Parameter>
            <Parameter name="estimate_extent">false</Parameter>
            <Parameter name="extent">&epsg900913_extent;</Parameter>

            <Parameter name="table"><![CDATA[
                (SELECT way,
                        name
                 FROM planet_osm_polygon
                 WHERE "natural" IN ('water', 'bay')
                    OR waterway IN ('riverbank')
                 ORDER BY z_order ASC, way_area DESC
                
                ) AS water]]></Parameter>
        </Datasource>
    </Layer>
    
    <!--
        Low-zoom lines, used at zoom=10 and below where
        only motorways and major roads should appear.
    -->
    <Layer class="lo-lines lo-sublines" srs="&epsg900913;">
        <Datasource>
            <Parameter name="type">postgis</Parameter>
            <Parameter name="host">&osm_host;</Parameter>
            <Parameter name="port">&osm_port;</Parameter>
            <Parameter name="user">&osm_user;</Parameter>
            <Parameter name="password">&osm_pass;</Parameter>
            <Parameter name="dbname">&osm_name;</Parameter>
            <Parameter name="estimate_extent">false</Parameter>
            <Parameter name="extent">&epsg900913_extent;</Parameter>

            <Parameter name="table"><![CDATA[
                (SELECT way,
                        highway,
                        railway,
                        (CASE WHEN highway IN ('motorway') THEN 0
                              WHEN highway IN ('motorway_link') THEN 1
                              WHEN highway IN ('footpath', 'track', 'footway', 'steps', 'pedestrian', 'path', 'cycleway') THEN 2
                              WHEN railway IN ('rail', 'spur', 'subway', 'light_rail', 'tram', 'abandoned', 'disused', 'monorail') THEN 3
                              WHEN highway IN ('trunk', 'trunk_link', 'primary', 'primary_link') THEN 4
                              WHEN highway = 'secondary' THEN 5
                              WHEN highway = 'tertiary' THEN 6
                              ELSE 9 END) AS priority,
                        (CASE WHEN highway IN ('secondary', 'trunk', 'trunk_link', 'primary', 'primary_link', 'motorway', 'motorway_link') THEN 'major_road'
                              WHEN highway IN ('residential', 'unclassified', 'service', 'minor', 'road', 'tertiary') THEN 'minor_road'
                              WHEN railway IN ('rail', 'spur', 'subway', 'light_rail', 'tram', 'abandoned', 'disused', 'monorail') THEN 'rail'
                              WHEN highway IN ('footpath', 'track', 'footway', 'steps', 'pedestrian', 'path', 'cycleway') THEN 'path'
                              ELSE '' END) AS kind,
                        (CASE WHEN tunnel IN ('yes', 'true') THEN 'yes'
                              ELSE 'no' END) AS is_tunnel,
                        (CASE WHEN bridge IN ('yes', 'true') THEN 'yes'
                              ELSE 'no' END) AS is_bridge

                 FROM planet_osm_line

                 WHERE railway IN ('rail', 'spur', 'subway', 'light_rail', 'tram', 'abandoned', 'disused', 'monorail')
                    OR highway IN ('secondary', 'trunk', 'trunk_link', 'primary', 'primary_link', 'motorway', 'motorway_link')

                 ORDER BY priority DESC)
                 
                 AS lines]]></Parameter>
        </Datasource>
    </Layer>
    <Layer class="lo-lines lo-outlines" srs="&epsg900913;">
        <Datasource>
            <Parameter name="type">postgis</Parameter>
            <Parameter name="host">&osm_host;</Parameter>
            <Parameter name="port">&osm_port;</Parameter>
            <Parameter name="user">&osm_user;</Parameter>
            <Parameter name="password">&osm_pass;</Parameter>
            <Parameter name="dbname">&osm_name;</Parameter>
            <Parameter name="estimate_extent">false</Parameter>
            <Parameter name="extent">&epsg900913_extent;</Parameter>

            <Parameter name="table"><![CDATA[
                (SELECT way,
                        highway,
                        railway,
                        (CASE WHEN highway IN ('motorway') THEN 0
                              WHEN highway IN ('motorway_link') THEN 1
                              WHEN highway IN ('footpath', 'track', 'footway', 'steps', 'pedestrian', 'path', 'cycleway') THEN 2
                              WHEN railway IN ('rail', 'spur', 'subway', 'light_rail', 'tram', 'abandoned', 'disused', 'monorail') THEN 3
                              WHEN highway IN ('trunk', 'trunk_link', 'primary', 'primary_link') THEN 4
                              WHEN highway = 'secondary' THEN 5
                              WHEN highway = 'tertiary' THEN 6
                              ELSE 9 END) AS priority,
                        (CASE WHEN highway IN ('secondary', 'trunk', 'trunk_link', 'primary', 'primary_link', 'motorway', 'motorway_link') THEN 'major_road'
                              WHEN highway IN ('residential', 'unclassified', 'service', 'minor', 'road', 'tertiary') THEN 'minor_road'
                              WHEN railway IN ('rail', 'spur', 'subway', 'light_rail', 'tram', 'abandoned', 'disused', 'monorail') THEN 'rail'
                              WHEN highway IN ('footpath', 'track', 'footway', 'steps', 'pedestrian', 'path', 'cycleway') THEN 'path'
                              ELSE '' END) AS kind,
                        (CASE WHEN tunnel IN ('yes', 'true') THEN 'yes'
                              ELSE 'no' END) AS is_tunnel,
                        (CASE WHEN bridge IN ('yes', 'true') THEN 'yes'
                              ELSE 'no' END) AS is_bridge

                 FROM planet_osm_line

                 WHERE railway IN ('rail', 'spur', 'subway', 'light_rail', 'tram', 'abandoned', 'disused', 'monorail')
                    OR highway IN ('secondary', 'trunk', 'trunk_link', 'primary', 'primary_link', 'motorway', 'motorway_link')

                 ORDER BY priority DESC)
                 
                 AS lines]]></Parameter>
        </Datasource>
    </Layer>
    <Layer class="lo-lines lo-inlines" srs="&epsg900913;">
        <Datasource>
            <Parameter name="type">postgis</Parameter>
            <Parameter name="host">&osm_host;</Parameter>
            <Parameter name="port">&osm_port;</Parameter>
            <Parameter name="user">&osm_user;</Parameter>
            <Parameter name="password">&osm_pass;</Parameter>
            <Parameter name="dbname">&osm_name;</Parameter>
            <Parameter name="estimate_extent">false</Parameter>
            <Parameter name="extent">&epsg900913_extent;</Parameter>

            <Parameter name="table"><![CDATA[
                (SELECT way,
                        highway,
                        railway,
                        (CASE WHEN highway IN ('motorway') THEN 0
                              WHEN highway IN ('motorway_link') THEN 1
                              WHEN highway IN ('footpath', 'track', 'footway', 'steps', 'pedestrian', 'path', 'cycleway') THEN 2
                              WHEN railway IN ('rail', 'spur', 'subway', 'light_rail', 'tram', 'abandoned', 'disused', 'monorail') THEN 3
                              WHEN highway IN ('trunk', 'trunk_link', 'primary', 'primary_link') THEN 4
                              WHEN highway = 'secondary' THEN 5
                              WHEN highway = 'tertiary' THEN 6
                              ELSE 9 END) AS priority,
                        (CASE WHEN highway IN ('secondary', 'trunk', 'trunk_link', 'primary', 'primary_link', 'motorway', 'motorway_link') THEN 'major_road'
                              WHEN highway IN ('residential', 'unclassified', 'service', 'minor', 'road', 'tertiary') THEN 'minor_road'
                              WHEN railway IN ('rail', 'spur', 'subway', 'light_rail', 'tram', 'abandoned', 'disused', 'monorail') THEN 'rail'
                              WHEN highway IN ('footpath', 'track', 'footway', 'steps', 'pedestrian', 'path', 'cycleway') THEN 'path'
                              ELSE '' END) AS kind,
                        (CASE WHEN tunnel IN ('yes', 'true') THEN 'yes'
                              ELSE 'no' END) AS is_tunnel,
                        (CASE WHEN bridge IN ('yes', 'true') THEN 'yes'
                              ELSE 'no' END) AS is_bridge

                 FROM planet_osm_line

                 WHERE railway IN ('rail', 'spur', 'subway', 'light_rail', 'tram', 'abandoned', 'disused', 'monorail')
                    OR highway IN ('secondary', 'trunk', 'trunk_link', 'primary', 'primary_link', 'motorway', 'motorway_link')

                 ORDER BY priority DESC)
                 
                 AS lines]]></Parameter>
        </Datasource>
    </Layer>
    
    
    <!--
        Medium-zoom lines, used at zoom=11-13 where all
        roads should appear but no bridge casings are used.
    -->
    <Layer class="med-lines med-sublines" srs="&epsg900913;">
        <Datasource>
            <Parameter name="type">postgis</Parameter>
            <Parameter name="host">&osm_host;</Parameter>
            <Parameter name="port">&osm_port;</Parameter>
            <Parameter name="user">&osm_user;</Parameter>
            <Parameter name="password">&osm_pass;</Parameter>
            <Parameter name="dbname">&osm_name;</Parameter>
            <Parameter name="estimate_extent">false</Parameter>
            <Parameter name="extent">&epsg900913_extent;</Parameter>

            <Parameter name="table"><![CDATA[
                (SELECT way,
                        highway,
                        railway,
                        (CASE WHEN highway IN ('motorway', 'motorway_link') THEN 0
                              WHEN highway IN ('footpath', 'track', 'footway', 'steps', 'pedestrian', 'path', 'cycleway') THEN 1
                              WHEN railway IN ('rail', 'spur', 'subway', 'light_rail', 'tram', 'abandoned', 'disused', 'monorail') THEN 2
                              WHEN highway IN ('trunk', 'trunk_link', 'primary', 'primary_link') THEN 3
                              WHEN highway = 'secondary' THEN 4
                              WHEN highway = 'tertiary' THEN 5
                              ELSE 9 END) AS priority,
                        (CASE WHEN highway IN ('secondary', 'trunk', 'trunk_link', 'primary', 'primary_link', 'motorway', 'motorway_link') THEN 'major_road'
                              WHEN highway IN ('residential', 'unclassified', 'service', 'minor', 'road', 'tertiary') THEN 'minor_road'
                              WHEN railway IN ('rail', 'spur', 'subway', 'light_rail', 'tram', 'abandoned', 'disused', 'monorail') THEN 'rail'
                              WHEN highway IN ('footpath', 'track', 'footway', 'steps', 'pedestrian', 'path', 'cycleway') THEN 'path'
                              ELSE '' END) AS kind,
                        (CASE WHEN tunnel IN ('yes', 'true') THEN 'yes'
                              ELSE 'no' END) AS is_tunnel,
                        (CASE WHEN bridge IN ('yes', 'true') THEN 'yes'
                              ELSE 'no' END) AS is_bridge

                 FROM planet_osm_line

                 WHERE railway IN ('rail', 'spur', 'subway', 'light_rail', 'tram', 'abandoned', 'disused', 'monorail')
                    OR highway IN ('secondary', 'trunk', 'trunk_link', 'primary', 'primary_link', 'motorway', 'motorway_link')
                    OR highway IN ('residential', 'unclassified', 'service', 'minor', 'road', 'tertiary')
                    OR highway IN ('footpath', 'track', 'footway', 'steps', 'pedestrian', 'path', 'cycleway')

                 ORDER BY priority DESC)
                 
                 AS collected_lines]]></Parameter>
        </Datasource>
    </Layer>
    <Layer class="med-lines med-outlines" srs="&epsg900913;">
        <Datasource>
            <Parameter name="type">postgis</Parameter>
            <Parameter name="host">&osm_host;</Parameter>
            <Parameter name="port">&osm_port;</Parameter>
            <Parameter name="user">&osm_user;</Parameter>
            <Parameter name="password">&osm_pass;</Parameter>
            <Parameter name="dbname">&osm_name;</Parameter>
            <Parameter name="estimate_extent">false</Parameter>
            <Parameter name="extent">&epsg900913_extent;</Parameter>

            <Parameter name="table"><![CDATA[
                (SELECT way,
                        highway,
                        railway,
                        (CASE WHEN highway IN ('motorway', 'motorway_link') THEN 0
                              WHEN highway IN ('footpath', 'track', 'footway', 'steps', 'pedestrian', 'path', 'cycleway') THEN 1
                              WHEN railway IN ('rail', 'spur', 'subway', 'light_rail', 'tram', 'abandoned', 'disused', 'monorail') THEN 2
                              WHEN highway IN ('trunk', 'trunk_link', 'primary', 'primary_link') THEN 3
                              WHEN highway = 'secondary' THEN 4
                              WHEN highway = 'tertiary' THEN 5
                              ELSE 9 END) AS priority,
                        (CASE WHEN highway IN ('secondary', 'trunk', 'trunk_link', 'primary', 'primary_link', 'motorway', 'motorway_link') THEN 'major_road'
                              WHEN highway IN ('residential', 'unclassified', 'service', 'minor', 'road', 'tertiary') THEN 'minor_road'
                              WHEN railway IN ('rail', 'spur', 'subway', 'light_rail', 'tram', 'abandoned', 'disused', 'monorail') THEN 'rail'
                              WHEN highway IN ('footpath', 'track', 'footway', 'steps', 'pedestrian', 'path', 'cycleway') THEN 'path'
                              ELSE '' END) AS kind,
                        (CASE WHEN tunnel IN ('yes', 'true') THEN 'yes'
                              ELSE 'no' END) AS is_tunnel,
                        (CASE WHEN bridge IN ('yes', 'true') THEN 'yes'
                              ELSE 'no' END) AS is_bridge

                 FROM planet_osm_line

                 WHERE railway IN ('rail', 'spur', 'subway', 'light_rail', 'tram', 'abandoned', 'disused', 'monorail')
                    OR highway IN ('secondary', 'trunk', 'trunk_link', 'primary', 'primary_link', 'motorway', 'motorway_link')
                    OR highway IN ('residential', 'unclassified', 'service', 'minor', 'road', 'tertiary')
                    OR highway IN ('footpath', 'track', 'footway', 'steps', 'pedestrian', 'path', 'cycleway')

                 ORDER BY priority DESC)
                 
                 AS collected_lines]]></Parameter>
        </Datasource>
    </Layer>
    <Layer class="med-lines med-inlines" srs="&epsg900913;">
        <Datasource>
            <Parameter name="type">postgis</Parameter>
            <Parameter name="host">&osm_host;</Parameter>
            <Parameter name="port">&osm_port;</Parameter>
            <Parameter name="user">&osm_user;</Parameter>
            <Parameter name="password">&osm_pass;</Parameter>
            <Parameter name="dbname">&osm_name;</Parameter>
            <Parameter name="estimate_extent">false</Parameter>
            <Parameter name="extent">&epsg900913_extent;</Parameter>

            <Parameter name="table"><![CDATA[
                (SELECT way,
                        highway,
                        railway,
                        (CASE WHEN highway IN ('motorway', 'motorway_link') THEN 0
                              WHEN highway IN ('footpath', 'track', 'footway', 'steps', 'pedestrian', 'path', 'cycleway') THEN 1
                              WHEN railway IN ('rail', 'spur', 'subway', 'light_rail', 'tram', 'abandoned', 'disused', 'monorail') THEN 2
                              WHEN highway IN ('trunk', 'trunk_link', 'primary', 'primary_link') THEN 3
                              WHEN highway = 'secondary' THEN 4
                              WHEN highway = 'tertiary' THEN 5
                              ELSE 9 END) AS priority,
                        (CASE WHEN highway IN ('secondary', 'trunk', 'trunk_link', 'primary', 'primary_link', 'motorway', 'motorway_link') THEN 'major_road'
                              WHEN highway IN ('residential', 'unclassified', 'service', 'minor', 'road', 'tertiary') THEN 'minor_road'
                              WHEN railway IN ('rail', 'spur', 'subway', 'light_rail', 'tram', 'abandoned', 'disused', 'monorail') THEN 'rail'
                              WHEN highway IN ('footpath', 'track', 'footway', 'steps', 'pedestrian', 'path', 'cycleway') THEN 'path'
                              ELSE '' END) AS kind,
                        (CASE WHEN tunnel IN ('yes', 'true') THEN 'yes'
                              ELSE 'no' END) AS is_tunnel,
                        (CASE WHEN bridge IN ('yes', 'true') THEN 'yes'
                              ELSE 'no' END) AS is_bridge

                 FROM planet_osm_line

                 WHERE railway IN ('rail', 'spur', 'subway', 'light_rail', 'tram', 'abandoned', 'disused', 'monorail')
                    OR highway IN ('secondary', 'trunk', 'trunk_link', 'primary', 'primary_link', 'motorway', 'motorway_link')
                    OR highway IN ('residential', 'unclassified', 'service', 'minor', 'road', 'tertiary')
                    OR highway IN ('footpath', 'track', 'footway', 'steps', 'pedestrian', 'path', 'cycleway')

                 ORDER BY priority DESC)
                 
                 AS collected_lines]]></Parameter>
        </Datasource>
    </Layer>
    
    
    <!--
        High-zoom lines, used at zoom=14+ where all roads should appear
        and bridge casings require the use of expensive multigeometries.

        These queries makes use of the new Mapnik "!BBOX!" placeholder, described here:
            http://trac.mapnik.org/ticket/415
            http://trac.mapnik.org/changeset/1290
    -->
    <Layer class="hi-lines hi-sublines" srs="&epsg900913;">
        <Datasource>
            <Parameter name="type">postgis</Parameter>
            <Parameter name="host">&osm_host;</Parameter>
            <Parameter name="port">&osm_port;</Parameter>
            <Parameter name="user">&osm_user;</Parameter>
            <Parameter name="password">&osm_pass;</Parameter>
            <Parameter name="dbname">&osm_name;</Parameter>
            <Parameter name="estimate_extent">false</Parameter>
            <Parameter name="extent">&epsg900913_extent;</Parameter>

            <Parameter name="table"><![CDATA[
                (SELECT ST_Collect(way) AS way,
                        highway,
                        railway,
                        (CASE WHEN layer ~ E'^-?[[:digit:]]+(\.[[:digit:]]+)?$' THEN CAST (layer AS FLOAT)
                              ELSE 0
                              END) AS coalesced_layer,
                        (CASE WHEN highway IN ('motorway', 'motorway_link') THEN 0
                              WHEN highway IN ('footpath', 'track', 'footway', 'steps', 'pedestrian', 'path', 'cycleway') THEN 1
                              WHEN railway IN ('rail', 'spur', 'subway', 'light_rail', 'tram', 'abandoned', 'disused', 'monorail') THEN 2
                              WHEN highway IN ('trunk', 'trunk_link', 'primary', 'primary_link') THEN 3
                              WHEN highway = 'secondary' THEN 4
                              WHEN highway = 'tertiary' THEN 5
                              ELSE 9 END) AS priority,
                        (CASE WHEN highway IN ('secondary', 'trunk', 'trunk_link', 'primary', 'primary_link', 'motorway', 'motorway_link') THEN 'major_road'
                              WHEN highway IN ('residential', 'unclassified', 'service', 'minor', 'road', 'tertiary') THEN 'minor_road'
                              WHEN railway IN ('rail', 'spur', 'subway', 'light_rail', 'tram', 'abandoned', 'disused', 'monorail') THEN 'rail'
                              WHEN highway IN ('footpath', 'track', 'footway', 'steps', 'pedestrian', 'path', 'cycleway') THEN 'path'
                              ELSE '' END) AS kind,
                        (CASE WHEN tunnel IN ('yes', 'true') THEN 'yes'
                              ELSE 'no' END) AS is_tunnel,
                        (CASE WHEN bridge IN ('yes', 'true') THEN 'yes'
                              ELSE 'no' END) AS is_bridge

                 FROM (SELECT * FROM planet_osm_line WHERE ST_Intersects(way, !bbox!)) AS bounded_lines

                 WHERE railway IN ('rail', 'spur', 'subway', 'light_rail', 'tram', 'abandoned', 'disused', 'monorail')
                    OR highway IN ('secondary', 'trunk', 'trunk_link', 'primary', 'primary_link', 'motorway', 'motorway_link')
                    OR highway IN ('residential', 'unclassified', 'service', 'minor', 'road', 'tertiary')
                    OR highway IN ('footpath', 'track', 'footway', 'steps', 'pedestrian', 'path', 'cycleway')

                 GROUP BY highway, railway, coalesced_layer, priority, kind, is_tunnel, is_bridge
                 ORDER BY coalesced_layer ASC, priority DESC)
                 
                 AS collected_lines]]></Parameter>
        </Datasource>
    </Layer>
    <Layer class="hi-lines hi-outlines" srs="&epsg900913;">
        <Datasource>
            <Parameter name="type">postgis</Parameter>
            <Parameter name="host">&osm_host;</Parameter>
            <Parameter name="port">&osm_port;</Parameter>
            <Parameter name="user">&osm_user;</Parameter>
            <Parameter name="password">&osm_pass;</Parameter>
            <Parameter name="dbname">&osm_name;</Parameter>
            <Parameter name="estimate_extent">false</Parameter>
            <Parameter name="extent">&epsg900913_extent;</Parameter>

            <Parameter name="table"><![CDATA[
                (SELECT ST_Collect(way) AS way,
                        highway,
                        railway,
                        (CASE WHEN layer ~ E'^-?[[:digit:]]+(\.[[:digit:]]+)?$' THEN CAST (layer AS FLOAT)
                              ELSE 0
                              END) AS coalesced_layer,
                        (CASE WHEN highway IN ('motorway', 'motorway_link') THEN 0
                              WHEN highway IN ('footpath', 'track', 'footway', 'steps', 'pedestrian', 'path', 'cycleway') THEN 1
                              WHEN railway IN ('rail', 'spur', 'subway', 'light_rail', 'tram', 'abandoned', 'disused', 'monorail') THEN 2
                              WHEN highway IN ('trunk', 'trunk_link', 'primary', 'primary_link') THEN 3
                              WHEN highway = 'secondary' THEN 4
                              WHEN highway = 'tertiary' THEN 5
                              ELSE 9 END) AS priority,
                        (CASE WHEN highway IN ('secondary', 'trunk', 'trunk_link', 'primary', 'primary_link', 'motorway', 'motorway_link') THEN 'major_road'
                              WHEN highway IN ('residential', 'unclassified', 'service', 'minor', 'road', 'tertiary') THEN 'minor_road'
                              WHEN railway IN ('rail', 'spur', 'subway', 'light_rail', 'tram', 'abandoned', 'disused', 'monorail') THEN 'rail'
                              WHEN highway IN ('footpath', 'track', 'footway', 'steps', 'pedestrian', 'path', 'cycleway') THEN 'path'
                              ELSE '' END) AS kind,
                        (CASE WHEN tunnel IN ('yes', 'true') THEN 'yes'
                              ELSE 'no' END) AS is_tunnel,
                        (CASE WHEN bridge IN ('yes', 'true') THEN 'yes'
                              ELSE 'no' END) AS is_bridge

                 FROM (SELECT * FROM planet_osm_line WHERE ST_Intersects(way, !bbox!)) AS bounded_lines

                 WHERE railway IN ('rail', 'spur', 'subway', 'light_rail', 'tram', 'abandoned', 'disused', 'monorail')
                    OR highway IN ('secondary', 'trunk', 'trunk_link', 'primary', 'primary_link', 'motorway', 'motorway_link')
                    OR highway IN ('residential', 'unclassified', 'service', 'minor', 'road', 'tertiary')
                    OR highway IN ('footpath', 'track', 'footway', 'steps', 'pedestrian', 'path', 'cycleway')

                 GROUP BY highway, railway, coalesced_layer, priority, kind, is_tunnel, is_bridge
                 ORDER BY coalesced_layer ASC, priority DESC)
                 
                 AS collected_lines]]></Parameter>
        </Datasource>
    </Layer>
    <Layer class="hi-lines hi-inlines" srs="&epsg900913;">
        <Datasource>
            <Parameter name="type">postgis</Parameter>
            <Parameter name="host">&osm_host;</Parameter>
            <Parameter name="port">&osm_port;</Parameter>
            <Parameter name="user">&osm_user;</Parameter>
            <Parameter name="password">&osm_pass;</Parameter>
            <Parameter name="dbname">&osm_name;</Parameter>
            <Parameter name="estimate_extent">false</Parameter>
            <Parameter name="extent">&epsg900913_extent;</Parameter>

            <Parameter name="table"><![CDATA[
                (SELECT ST_Collect(way) AS way,
                        highway,
                        railway,
                        (CASE WHEN layer ~ E'^-?[[:digit:]]+(\.[[:digit:]]+)?$' THEN CAST (layer AS FLOAT)
                              ELSE 0
                              END) AS coalesced_layer,
                        (CASE WHEN highway IN ('motorway', 'motorway_link') THEN 0
                              WHEN highway IN ('footpath', 'track', 'footway', 'steps', 'pedestrian', 'path', 'cycleway') THEN 1
                              WHEN railway IN ('rail', 'spur', 'subway', 'light_rail', 'tram', 'abandoned', 'disused', 'monorail') THEN 2
                              WHEN highway IN ('trunk', 'trunk_link', 'primary', 'primary_link') THEN 3
                              WHEN highway = 'secondary' THEN 4
                              WHEN highway = 'tertiary' THEN 5
                              ELSE 9 END) AS priority,
                        (CASE WHEN highway IN ('secondary', 'trunk', 'trunk_link', 'primary', 'primary_link', 'motorway', 'motorway_link') THEN 'major_road'
                              WHEN highway IN ('residential', 'unclassified', 'service', 'minor', 'road', 'tertiary') THEN 'minor_road'
                              WHEN railway IN ('rail', 'spur', 'subway', 'light_rail', 'tram', 'abandoned', 'disused', 'monorail') THEN 'rail'
                              WHEN highway IN ('footpath', 'track', 'footway', 'steps', 'pedestrian', 'path', 'cycleway') THEN 'path'
                              ELSE '' END) AS kind,
                        (CASE WHEN tunnel IN ('yes', 'true') THEN 'yes'
                              ELSE 'no' END) AS is_tunnel,
                        (CASE WHEN bridge IN ('yes', 'true') THEN 'yes'
                              ELSE 'no' END) AS is_bridge

                 FROM (SELECT * FROM planet_osm_line WHERE ST_Intersects(way, !bbox!)) AS bounded_lines

                 WHERE railway IN ('rail', 'spur', 'subway', 'light_rail', 'tram', 'abandoned', 'disused', 'monorail')
                    OR highway IN ('secondary', 'trunk', 'trunk_link', 'primary', 'primary_link', 'motorway', 'motorway_link')
                    OR highway IN ('residential', 'unclassified', 'service', 'minor', 'road', 'tertiary')
                    OR highway IN ('footpath', 'track', 'footway', 'steps', 'pedestrian', 'path', 'cycleway')

                 GROUP BY highway, railway, coalesced_layer, priority, kind, is_tunnel, is_bridge
                 ORDER BY coalesced_layer ASC, priority DESC)
                 
                 AS collected_lines]]></Parameter>
        </Datasource>
    </Layer>
    
    <!--
        Labels for towns and so forth
    -->
    <Layer id="place-points" srs="&epsg900913;">
        <Datasource>
            <Parameter name="type">postgis</Parameter>
            <Parameter name="host">&osm_host;</Parameter>
            <Parameter name="port">&osm_port;</Parameter>
            <Parameter name="user">&osm_user;</Parameter>
            <Parameter name="password">&osm_pass;</Parameter>
            <Parameter name="dbname">&osm_name;</Parameter>
            <Parameter name="estimate_extent">false</Parameter>
            <Parameter name="extent">&epsg900913_extent;</Parameter>

            <Parameter name="table"><![CDATA[
                (SELECT *,
                        REGEXP_REPLACE(UPPER(name), '(.)', E'\\1\xC2\xA0\xC2\xA0', 'g') AS name_stretched,
                        COALESCE(z_order, 0) AS coalesced_z_order,
                        (CASE WHEN place = 'city' THEN 0
                              WHEN place = 'town' THEN 1
                              WHEN place = 'village' THEN 2
                              ELSE 3 END) AS priority
                 FROM planet_osm_point
                 WHERE place IN ('city', 'town', 'hamlet', 'village')
                 ORDER BY priority ASC, coalesced_z_order DESC
                ) AS places]]></Parameter>
        </Datasource>
    </Layer>

    <!--
        Labels for motorways and major roads.
    -->
    <Layer id="major-road-labels" srs="&epsg900913;">
        <Datasource>
            <Parameter name="type">postgis</Parameter>
            <Parameter name="host">&osm_host;</Parameter>
            <Parameter name="port">&osm_port;</Parameter>
            <Parameter name="user">&osm_user;</Parameter>
            <Parameter name="password">&osm_pass;</Parameter>
            <Parameter name="dbname">&osm_name;</Parameter>
            <Parameter name="estimate_extent">false</Parameter>
            <Parameter name="extent">&epsg900913_extent;</Parameter>

            <Parameter name="table"><![CDATA[
                (SELECT way,
                        (CASE WHEN highway = 'motorway'
                              THEN ''
                              ELSE name
                              END) AS name,
                        (CASE WHEN highway = 'motorway' AND CHAR_LENGTH(ref) BETWEEN 2 AND 15
                              THEN REGEXP_REPLACE(ref, E'\s*;\s*', E' / ', 'g')
                              ELSE ''
                              END) AS ref,
                        (CASE WHEN highway = 'motorway' AND CHAR_LENGTH(ref) BETWEEN 2 AND 15
                              THEN CHAR_LENGTH(ref)
                              ELSE 0
                              END) AS ref_length,

                        highway,
                        ST_Length(way) AS length,

                        (CASE WHEN highway IN ('motorway', 'motorway_link') THEN 0
                              WHEN highway IN ('footpath', 'track', 'footway', 'steps', 'pedestrian', 'path', 'cycleway') THEN 1
                              WHEN railway IN ('rail', 'spur', 'subway', 'light_rail', 'tram', 'abandoned', 'disused', 'monorail') THEN 2
                              WHEN highway IN ('trunk', 'trunk_link', 'primary', 'primary_link') THEN 3
                              WHEN highway = 'secondary' THEN 4
                              WHEN highway = 'tertiary' THEN 5
                              ELSE 9 END) AS priority,
                        (CASE WHEN highway IN ('secondary', 'trunk', 'trunk_link', 'primary', 'primary_link', 'motorway', 'motorway_link') THEN 'major_road'
                              WHEN highway IN ('residential', 'unclassified', 'service', 'minor', 'road', 'tertiary') THEN 'minor_road'
                              WHEN railway IN ('rail', 'spur', 'subway', 'light_rail', 'tram', 'abandoned', 'disused', 'monorail') THEN 'rail'
                              WHEN highway IN ('footpath', 'track', 'footway', 'steps', 'pedestrian', 'path', 'cycleway') THEN 'path'
                              ELSE '' END) AS kind,
                        (CASE WHEN tunnel IN ('yes', 'true') THEN 'yes'
                              ELSE 'no' END) AS is_tunnel,
                        (CASE WHEN bridge IN ('yes', 'true') THEN 'yes'
                              ELSE 'no' END) AS is_bridge

                 FROM planet_osm_line

                 WHERE highway IN ('secondary', 'trunk', 'trunk_link', 'primary', 'primary_link', 'motorway', 'motorway_link')

                 ORDER BY priority ASC, length DESC)
                 
                 AS collected_lines]]></Parameter>
        </Datasource>
    </Layer>

    <!--
        Labels for residential and minor roads.
    -->
    <Layer id="minor-road-labels" srs="&epsg900913;">
        <Datasource>
            <Parameter name="type">postgis</Parameter>
            <Parameter name="host">&osm_host;</Parameter>
            <Parameter name="port">&osm_port;</Parameter>
            <Parameter name="user">&osm_user;</Parameter>
            <Parameter name="password">&osm_pass;</Parameter>
            <Parameter name="dbname">&osm_name;</Parameter>
            <Parameter name="estimate_extent">false</Parameter>
            <Parameter name="extent">&epsg900913_extent;</Parameter>

            <Parameter name="table"><![CDATA[
                (SELECT way,
                        name,

                        highway,
                        ST_Length(way) AS length,

                        (CASE WHEN highway IN ('motorway', 'motorway_link') THEN 0
                              WHEN highway IN ('footpath', 'track', 'footway', 'steps', 'pedestrian', 'path', 'cycleway') THEN 1
                              WHEN railway IN ('rail', 'spur', 'subway', 'light_rail', 'tram', 'abandoned', 'disused', 'monorail') THEN 2
                              WHEN highway IN ('trunk', 'trunk_link', 'primary', 'primary_link') THEN 3
                              WHEN highway = 'secondary' THEN 4
                              WHEN highway = 'tertiary' THEN 5
                              ELSE 9 END) AS priority,
                        (CASE WHEN highway IN ('secondary', 'trunk', 'trunk_link', 'primary', 'primary_link', 'motorway', 'motorway_link') THEN 'major_road'
                              WHEN highway IN ('residential', 'unclassified', 'service', 'minor', 'road', 'tertiary') THEN 'minor_road'
                              WHEN railway IN ('rail', 'spur', 'subway', 'light_rail', 'tram', 'abandoned', 'disused', 'monorail') THEN 'rail'
                              WHEN highway IN ('footpath', 'track', 'footway', 'steps', 'pedestrian', 'path', 'cycleway') THEN 'path'
                              ELSE '' END) AS kind,
                        (CASE WHEN tunnel IN ('yes', 'true') THEN 'yes'
                              ELSE 'no' END) AS is_tunnel,
                        (CASE WHEN bridge IN ('yes', 'true') THEN 'yes'
                              ELSE 'no' END) AS is_bridge

                 FROM planet_osm_line

                 WHERE highway IN ('residential', 'unclassified', 'service', 'minor', 'road', 'tertiary')

                 ORDER BY priority ASC, length DESC)
                 
                 AS collected_lines]]></Parameter>
        </Datasource>
    </Layer>

    <Layer id="null-island-label" srs="&epsg900913;">
        <Datasource>
            <Parameter name="type">shape</Parameter>
            <Parameter name="file">shp/null</Parameter>
        </Datasource>
    </Layer>

</Map>
